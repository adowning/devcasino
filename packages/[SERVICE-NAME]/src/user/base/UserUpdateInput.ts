/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  ValidateNested,
  IsJSON,
  IsEnum,
} from "class-validator";
import { FriendRelationshipUpdateManyWithoutUsersInput } from "./FriendRelationshipUpdateManyWithoutUsersInput";
import { Type } from "class-transformer";
import { PrivateMessageUpdateManyWithoutUsersInput } from "./PrivateMessageUpdateManyWithoutUsersInput";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { RoomMessageUpdateManyWithoutUsersInput } from "./RoomMessageUpdateManyWithoutUsersInput";
import { EnumUserStatus } from "./EnumUserStatus";
@InputType()
class UserUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: () => FriendRelationshipUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => FriendRelationshipUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => FriendRelationshipUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  friendRelationships?: FriendRelationshipUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => FriendRelationshipUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => FriendRelationshipUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => FriendRelationshipUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  invites?: FriendRelationshipUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string;

  @ApiProperty({
    required: false,
    type: () => PrivateMessageUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => PrivateMessageUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => PrivateMessageUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  privateMessages?: PrivateMessageUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => PrivateMessageUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => PrivateMessageUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => PrivateMessageUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  receivedMessges?: PrivateMessageUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  roles?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => RoomMessageUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => RoomMessageUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => RoomMessageUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  roomMessages?: RoomMessageUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    enum: EnumUserStatus,
  })
  @IsEnum(EnumUserStatus)
  @IsOptional()
  @Field(() => EnumUserStatus, {
    nullable: true,
  })
  status?: "Online" | "Offline" | "Busy" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  username?: string;
}
export { UserUpdateInput };
